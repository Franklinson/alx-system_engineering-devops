#!/usr/bin/env bash
# Function to display DNS information for a subdomain

display_dns_info() {
  local domain="$1"
  local subdomain="$2"
  local record_type
  local destination

  if [ -z "$subdomain" ]; then
    # If no subdomain is specified, use default subdomains
    subdomains=("www" "lb-01" "web-01" "web-02")
  else
    # If a subdomain is specified, use it
    subdomains=("$subdomain")
  fi

  for sub in "${subdomains[@]}"; do
    # Use dig to query DNS records and store the output
    dns_output=$(dig +short "$sub.$domain")

    # Determine the DNS record type
    if [ -z "$dns_output" ]; then
      record_type="N/A"
      destination="N/A"
    else
      # Check if the output contains an IPv4 address
      if echo "$dns_output" | grep -E '^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$' >/dev/null; then
        record_type="A"
      else
        # If not an IPv4 address, it's assumed to be a CNAME record
        record_type="CNAME"
      fi
      destination="$dns_output"
    fi

    # Display the information
    echo "The subdomain $sub is a $record_type record and points to $destination"
  done
}

# Check if at least one argument (domain) is provided
if [ $# -lt 1 ]; then
  echo "Usage: $0 <domain> [subdomain]"
  exit 1
fi

domain="$1"
subdomain="$2"

# Call the function to display DNS information
display_dns_info "$domain" "$subdomain"
